#include <iostream>  // Стандартная библиотек ввода-вывода

using namespace std;  // Использование стандартного пространства имён

void InputDOU(double* tmp)  // функция ввода вещественного числа
{
	while (!(cin >> *tmp) || (cin.peek() != '\n'))
	{
		cin.clear();
		while (cin.get() != '\n');
		cout << "\tНеверный ввод! Введите вещественное число заново." << endl;
	}
}

class RealNumber  // Класс вещественного числа
{
private:
	double number = 0;  // Вещественное поле
public:
	void SetNumber()  // Функция установки начального значения
	{
		cout << "\tВведите вещественное число: " << endl;
		InputDOU(&number);
	}

	void operator++()  // Описание определение оператора ++
	{
		cout << "\tВаше вещественное число: " << number << endl;
		number *= 2;
		cout << "\tВаше вещественное числов было умножено на 2!" << endl;
		cout << "\tВаше изменённое вещественное число: " << number << endl;
	}

	friend void operator*(RealNumber tmp)  // Описание перегрузки дружественной функции
	{
		cout << "\t___________¶¶¶__¶¶¶_¶¶_¶¶__¶¶_¶¶¶¶¶¶_________" << endl;
		cout << "\t___________¶¶¶__¶¶_¶¶_¶¶¶_¶¶__¶¶¶¶¶__________" << endl;
		cout <<	"\t__________¶¶¶¶_¶¶_¶¶__¶¶¶¶¶__¶¶¶_____________" << endl;
		cout << "\t_________¶¶¶¶¶¶¶¶_¶¶_¶¶¶¶¶__¶¶¶¶¶¶___________" << endl;
		cout << "\t_________¶¶¶¶¶¶¶_¶¶_¶¶¶¶¶___¶¶¶¶¶¶___________" << endl;
		cout << "\t________¶¶¶_¶¶¶_¶¶¶_¶¶_¶¶__¶¶¶_________¶¶¶¶¶_" << endl;
		cout << "\t___¶___¶¶¶__¶¶¶_¶¶_¶¶__¶¶¶_¶¶¶¶¶___¶¶¶¶¶¶____" << endl;
		cout << "\t__¶¶¶__¶¶__¶¶¶_¶¶__¶¶__¶¶¶¶¶¶¶¶¶¶¶¶¶¶________" << endl;
		cout << "\t_¶¶¶¶___________________¶¶¶¶¶¶¶¶¶____________" << endl;
		cout << "\t¶¶¶¶¶¶___________¶¶¶¶¶¶¶¶¶¶¶_________________" << endl;
		cout << "\t¶¶¶¶¶¶¶¶___¶¶¶¶¶¶¶¶¶¶¶¶¶¶____________________" << endl;
		cout << "\t¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶________________________" << endl;
		cout << "\t¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶____________________________" << endl;
		cout << "\t_¶¶¶¶¶¶¶¶¶¶¶_________________________________" << endl;
	}
};

int main(void)
{
	setlocale(LC_ALL, "Russian");  // Установка русского языка в консоль

	cout << "\t\t Первый пункт задания - работа с перегрузками операторов, результат:" << endl << endl;
	RealNumber zxc;  // Создание представителя класса
	zxc.SetNumber();  // Вызов функции установки начального значения вещественного поля
	cout << "\tМы создали нового представителя класса, воспользуемся оператором ++:" << endl << endl;
	++zxc;  // Вызов перегруженного оператора
	cout << endl << "\tТеперь воспользуемся функцией-членом *:" << endl << endl;
	*zxc;  // Вызов дружественной функции
	cout << endl << "Конец работы!\n";
	return 0;
}
