// ConsoleApplication26.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.

#define _CRT_SECURE_NO_WARNINGS  // Директива препроцесса для устранения предупреждений

#include <iostream>
#include <cmath>  
#include <stdio.h>

using namespace std;  // Использование стандартного пространства имён

int main()
{
  setlocale(LC_ALL, "RUS");  // Установка для консоли русского языка

  cout << "Каждая пара (Xk ,Yk) представляет координаты одной из n точек на плоскости.";
  cout << "Определить, у какого числа точек\nположительна как абсцисса Xk, так и ордината Yk; для прочих точек найти среднее расстояние до начала координат\n\n";
  
  int n;  // Размер массивов
  float N;  // Промежуточная переменная для проверки на целостность размеров массивов
  char a;  // Промежуточная переменная для проверки на отсутствие буквенных значений в размерах массивов

  cout << "Введите размер массивов:\n";

  if (scanf("%f%c", &N, &a) != 2 || a != '\n')  // Проверка размеров массивов на буквенное значение
  {
    cout << "Неверное значение длины массивов!";
  }
  else 
  {
    n = N;
    if (n != N || n <= 0)  // Проверка на целостность и положительность размера массивов
    {
      cout << "Неверное значение длины массивов!";
    }
    else 
    {
      float* X = new float[n];  // Создание массива X на n элементов
      float* Y = new float[n];  // Создание массива Y на n элементов
      float num;  // Промежуточное значение
      int flag = 1;  // Промежуточная переменная для проверки на валидность элемента

      cout << endl;
      cout << "Введите " << n << " пар-(ы) точек:\n";

      for (int i = 0; i < n; i++)  // Заполнение массивов
      {
        if (scanf("%f", &num) != 1)  // Проверка координаты n-ой точки на букву
        {
          cout << "Неверное значение для элемента массива";
          flag = 0;  // Переключение флага для избегания дальнейших действий
          break;  // Преждевременный выход из цикла из-за некорректности ввода координат n-ой точки
        }
        else 
        {
          X[i] = num;  // Присваиваем X координате n-ой точки введённое значение
        }

        if (i == (n - 1))  // Проверка на нахождении на последнем элементе массива
        {
          if (scanf("%f%c", &num, &a) != 2 ||  a != '\n')  // Проверка значения элемента массива на буквенное значение
          {
            cout << "Неверное значение для элемента массива";
            flag = 0;  // Переключение флага для избегания дальнейших действий
            break;  // Преждевременный выход из цикла из-за некорректности ввода координат n-ой точки
          }
          else 
          {
            Y[i] = num;  // Присваиваем Y координате n-ой точки введённое значение
          }
        }
        else 
        {
          if (scanf("%f", &num) != 1)  // Проверка введённого элемента массива на корректность ввода
          {
            cout << "Неверное значение для элемента массива!";  // Проверка элемента массива на буквенное значение
            flag = 0;  // Переключение флага для избегания дальнейших действий
            break;  // Преждевременный выход из цикла из-за некорректности ввода координат n-ой точки
          }
          else 
          {
            Y[i] = num;  // Присваиваем Y координате n-ой точки введённое значение
          }
        }
      }

      if (flag == 1)  // Проверка флага на наличие ошибок
      {
        int count = 0;  // Сумма положительных точек
        float rast = 0; // Сумма растояния прочих точек
        int schet = 0;  // Счетчик прочих точек

        for (int i = 0; i < n; i++)  // Основные действия алгоритма
        {
          if (X[i] > 0 && Y[i] > 0)  // Поиск положительных элементов массивов
          {
            count++;  // Увеличиваем счётчик подходящих переменнхы
          }
          else 
          {
            rast += sqrt(pow(fabs(X[i]), 2) + pow(fabs(Y[i]), 2));  // Прибавляем к сумме растояний до начала координат
            schet++;  // Увеличиваем кол-во прочих точек
          }
        }

        cout << endl;
        cout << "Кол-во точек с положительной абсциссой и ординатой: " << count << endl;

        if (schet == 0)  // Проверка на наличие прочих точек 
        {
          cout << endl;
          cout << "Прочих точек нет.";
        }
        else 
        {
          float sred = rast / schet;  // Расчёт среднего расстояния до начала координат
          cout << endl;
          cout << "Среднее растояние до начала координат прочих точек: " << sred;
        }
      }
      cout << "\n\n\n";

      delete(X);  // Очистка памяти
      delete(Y);  // Очистка памяти
    }
  }
  return 0;
}
